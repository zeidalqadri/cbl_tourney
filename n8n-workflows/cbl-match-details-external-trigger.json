{
  "name": "CBL Match Details - External Trigger",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "cbl-match-update",
        "options": {
          "responseData": "allEntries"
        }
      },
      "id": "webhook-trigger",
      "name": "Webhook Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [250, 300],
      "webhookId": "cbl-match-update-webhook"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.body.venue }}",
              "operation": "isNotEmpty"
            },
            {
              "value1": "={{ $json.body.matchNumber }}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "validate-input",
      "name": "Validate Input",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [450, 300]
    },
    {
      "parameters": {
        "functionCode": "const body = items[0].json.body;\nconst venue = body.venue;\nconst matchNumber = parseInt(body.matchNumber);\nconst streamUrl = body.streamUrl || null;\nconst status = body.status || 'in_progress';\n\nconst payload = {\n  type: \"match_status\",\n  data: {\n    venue: venue,\n    matchNumber: matchNumber,\n    status: status\n  }\n};\n\n// Only add live stream URL if provided\nif (streamUrl) {\n  payload.data.liveStreamUrl = streamUrl;\n}\n\nconst payloadString = JSON.stringify(payload);\nconst encodedPayload = encodeURIComponent(payloadString);\n\nitems[0].json.encodedPayload = encodedPayload;\nitems[0].json.payloadDetails = payload;\n\nreturn items;"
      },
      "id": "build-payload",
      "name": "Build Payload",
      "type": "n8n-nodes-base.functionItem",
      "typeVersion": 1,
      "position": [650, 250]
    },
    {
      "parameters": {
        "method": "GET",
        "url": "=https://cbl-tourney.pages.dev/webhook-handler.html?payload={{ $json.encodedPayload }}",
        "options": {
          "timeout": 30000,
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "id": "update-match",
      "name": "Update Match Status",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [850, 250]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "status",
              "value": "error"
            },
            {
              "name": "message",
              "value": "Invalid input: venue and matchNumber are required"
            }
          ]
        }
      },
      "id": "invalid-input",
      "name": "Invalid Input Response",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [650, 350]
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{ JSON.stringify({status: 'success', message: 'Match updated successfully', timestamp: new Date().toISOString()}) }}",
        "options": {
          "raw": {
            "json": true
          }
        }
      },
      "id": "success-response",
      "name": "Success Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1050, 250]
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{ JSON.stringify($json) }}",
        "options": {
          "responseCode": 400,
          "raw": {
            "json": true
          }
        }
      },
      "id": "error-response",
      "name": "Error Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [850, 350]
    }
  ],
  "connections": {
    "Webhook Trigger": {
      "main": [
        [
          {
            "node": "Validate Input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validate Input": {
      "main": [
        [
          {
            "node": "Build Payload",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Invalid Input Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Build Payload": {
      "main": [
        [
          {
            "node": "Update Match Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Match Status": {
      "main": [
        [
          {
            "node": "Success Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Invalid Input Response": {
      "main": [
        [
          {
            "node": "Error Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner"
  },
  "staticData": null,
  "tags": [
    {
      "id": "1",
      "name": "cbl-tournament"
    },
    {
      "id": "5",
      "name": "webhook-triggered"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2024-08-04T14:00:00.000Z",
  "versionId": "v1"
}